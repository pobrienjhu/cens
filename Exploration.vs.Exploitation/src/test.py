import numpy

def scrap6():
    p1 = numpy.random.uniform(0, 1, size=10)
    print( "p1 is "+str(p1))
    p1[p1 < 0.8] = float( -0.9 )
    p1[p1 > 0.8] = float( 0.1 )
    p1[p1 < 0.0] = float( 0.9 )
    print( "p1 is "+str(p1))


def scrap5():
    p1Gen = numpy.random.binomial(0.9, 0.3, size=10)
    #p1 = numpy.random.uniform(-1, 1, size=n)
    p1 = [float(i) for i in p1Gen]
    print( "p1 is "+str(p1))
    p1[p1 > 0] = float( 0.9 )
    #p1[p1 < 1.0] = float( 0.1 )
    print( "p1 is "+str(p1))

    

def scrap4():
    
    r = 10000
    p = 0.5
    t = 0
    for i in range(0,r):
        n = numpy.random.binomial(1, p)
        t += n
        print str(n)
    print "p is "+str(p)
    print str(float(t)/float(r))

def scrap3():
    arrayTest = list()
    print str(arrayTest)
    arrayTest.append(1)
    print str(arrayTest)
    arrayTest.append(2)
    print str(arrayTest)


def scrap1():
    results = []
    probabilityOfChange = 0.4
    numOfSims = 1000
    for i in range(0,numOfSims):
        results.append( numpy.random.binomial(1, probabilityOfChange) )
    
    resultPercent = float(results.count(1))/float(numOfSims)
    
    print "occurances of 1 "+str(results.count(1))
    print "probabilityOfChange is %.3f" % probabilityOfChange
    print "occurances persentage is %.3f" % resultPercent
    
    
    a = numpy.array([[1,2,3,4]])
    b = numpy.array([3,4,5,6])
    
    ab = numpy.vstack((a,b))

def scrap2():
    #print a
    #print b
    #print ab
    #print len( a) 
    #print len (ab)
    
    c = [1,2,3]
    d = [3,3,3]
    #print numpy.true_divide(c,3)
    
    #code = numpy.random.randint(0,1,10)
    
    #print code


scrap6()