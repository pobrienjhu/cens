from networkx.generators import *
import GraphGenerator
import SimulationUtils

class ERGraphGenerator(GraphGenerator.GraphGenerator):
    
    
        def __init__(self,p,timeStamp,dir):
            #probability for edge creation
            self.p = p
            self.timeStamp = timeStamp
            self.dir = dir
    
        def generateGraph(self,nodeSize):
            
            self.nodeSize = nodeSize
            if( self.p < 0.1):
                graph = fast_gnp_random_graph(nodeSize, self.p )          
            else:
                graph = erdos_renyi_graph(nodeSize, self.p )   
            return self.saveGraph(self.dir,graph)


        def graphName(self): 
            return "ERGraph"
    
        def graphFileInformation(self):
            return "-"+str(self.nodeSize)+"-"+str(self.p)+"-"+str(self.timeStamp)
    
        def graphInformation(self):
            return " pedge: "+str(self.p)
            
        def graphData(self):
            return [self.p]