import SimulationUtils
import numpy



def payoff(belief, reality, degreeOfComplexity):
    
    payoff = 0
    index = 0
    
    while index < len(belief):
        print index, belief[index], reality[index]
        
        if( belief[index] != reality[index] ):
            index = (((index) / degreeOfComplexity) + 1) * degreeOfComplexity
            continue
        
        if ((index+1) % degreeOfComplexity == 0 ):
            payoff += degreeOfComplexity
        
        index += 1

    
    return payoff
    

m = 100
s = [1,4,7,10]

reality = SimulationUtils.generateReality(m)    
    
individual = numpy.random.randint(-1,2,size=(1,m))

print "reality = "+str(reality)
print "individual = "+str(individual)
for sIndex, sValue in enumerate(s):
    print "payoff for "+str(sValue)+"is "+str(payoff(individual[0], reality, sValue))