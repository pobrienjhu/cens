import Queue
import threading
import multiprocessing
import subprocess

q = Queue.Queue()
for i in range(30): #put 30 tasks in the queue
    q.put(i)

def test(it):
    for i in range(0,1000000):
        i += 1    
    print("done for item "+str(it))

def worker():
    print("in worker, queue length is "+str(q.qsize()))
    while True:
        item = q.get()
        print(str(threading.current_thread() )+" start test for item "+str(item))
        test(item)
        #execute a task: call a shell program and wait until it completes
        #subprocess.call(test(item), shell=True) 
        #subprocess.call("echo "+str(item), shell=True) 
        q.task_done()

cpus=multiprocessing.cpu_count()-1 #detect number of cores
print("Creating %d threads" % cpus)
print("Queue length is  %d " % q.qsize())
for i in range(cpus):
     t = threading.Thread(target=worker)
     t.daemon = True
     t.start()

q.join() #block until all tasks are done