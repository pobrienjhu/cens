from networkx.generators import *
import GraphGenerator
import SimulationUtils

class WSGraphGenerator(GraphGenerator.GraphGenerator):
    
    
        def __init__(self,k,p,timeStamp,dir):
            #probability for edge creation
            self.p = p
            self.k = k
            self.timeStamp = timeStamp
            self.dir = dir
    
        def generateGraph(self,nodeSize):
            
            self.nodeSize = nodeSize           
            graph = watts_strogatz_graph(nodeSize, self.k, self.p, seed=None)           
            return self.saveGraph(self.dir,graph)


        def graphName(self): 
            return "WSGraph"
    
        def graphFileInformation(self):
            return "-"+str(self.nodeSize)+"-"+str(self.k)+"-"+str(self.p)+"-"+str(self.timeStamp)
    
        def graphInformation(self):
            return " k (nearest neighbors): "+str(self.k)+" p (of rewire): "+str(self.p)
            
        def graphData(self):
            return [self.k,self.p]